name: EC2 + Grafana Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      INSTANCE_NAME: WebServerWithGrafana
      REGION: us-east-1
      AMI_ID: ami-0cbbe2c6a1bb2ad63 
      INSTANCE_TYPE: t2.micro
      SECURITY_GROUP_ID: sg-xxxxxxxx       # Replace with your security group
      SUBNET_ID: subnet-xxxxxxxx           # Replace with your subnet
      KEY_NAME: your-keypair-name          # Replace with your EC2 Key Pair name
      SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Launch EC2 Instance
        id: ec2
        run: |
          echo "Launching EC2 instance..."
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id $AMI_ID \
            --instance-type $INSTANCE_TYPE \
            --key-name $KEY_NAME \
            --security-group-ids $SECURITY_GROUP_ID \
            --subnet-id $SUBNET_ID \
            --user-data file://scripts/install.sh \
            --region $REGION \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=$INSTANCE_NAME}]" \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

          echo "Waiting for public IP..."
          PUBLIC_IP=""
          while [ -z "$PUBLIC_IP" ]; do
            sleep 10
            PUBLIC_IP=$(aws ec2 describe-instances \
              --instance-ids $INSTANCE_ID \
              --region $REGION \
              --query "Reservations[0].Instances[0].PublicIpAddress" \
              --output text)
          done

          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "Instance $INSTANCE_ID launched with IP $PUBLIC_IP"

      - name: Wait for EC2 to become ready (SSH)
        run: |
          echo "Waiting for SSH to be available..."
          until ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$PUBLIC_IP 'echo "SSH Ready"' 2>/dev/null; do
            sleep 10
          done
          echo "SSH is now available."

      - name: Upload index.html to EC2
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 400 key.pem
          
          scp -o StrictHostKeyChecking=no -i key.pem index.html ec2-user@$PUBLIC_IP:/tmp/index.html
          
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$PUBLIC_IP << EOF
          sudo mv /tmp/index.html /var/www/html/index.html
          sudo systemctl restart httpd
EOF

      - name: Create Grafana Dashboard (optional)
        if: ${{ secrets.GRAFANA_API_KEY != '' }}
        run: |
          curl -X POST http://$PUBLIC_IP:3000/api/dashboards/db \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.GRAFANA_API_KEY }}" \
            -d '{
              "dashboard": {
                "id": null,
                "uid": "web-stats",
                "title": "Web Server Dashboard",
                "tags": ["web", "httpd"],
                "timezone": "browser",
                "panels": [{
                  "type": "text",
                  "title": "Welcome to Grafana",
                  "gridPos": {"x": 0, "y": 0, "w": 24, "h": 3},
                  "options": {
                    "content": "<b>Apache Web Server Dashboard</b>",
                    "mode": "html"
                  }
                }]
              },
              "overwrite": true
            }'
